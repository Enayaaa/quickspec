== Functions ==
    "" :: [Char]
  (++) :: [Char] -> [Char] -> [Char]
     0 :: Int
   (+) :: Int -> Int -> Int
length :: [Char] -> Int

== Functions ==
text :: [Char] -> Layout
nest :: Int -> Layout -> Layout
($$) :: Layout -> Layout -> Layout
(<>) :: Layout -> Layout -> Layout

== Laws ==
  1. nest 0 x = x
  2. x <> text "" = x
  3. (x $$ y) $$ z = x $$ (y $$ z)
  4. x <> nest y z = x <> z
  5. (x $$ y) <> z = x $$ (y <> z)
  6. (x <> y) <> z = x <> (y <> z)
  7. nest x (y <> z) = nest x y <> z
  8. nest x (nest y z) = nest y (nest x z)
  9. nest (x + y) z = nest x (nest y z)
 10. text xs <> text ys = text (xs ++ ys)
 11. nest x y $$ nest x z = nest x (y $$ z)
 12. text xs $$ nest (length xs) x = text xs <> (text "" $$ x)
 13. text "" <> (text xs $$ x) = text xs $$ x
 14. text (xs ++ ys) $$ nest (length xs) x = text xs <> (text ys $$ x)
 15. (text xs <> x) $$ (text "" <> x) = text xs <> (nest (length xs) x $$ x)
 16. (text xs <> x) $$ nest (length xs) y = text xs <> ((text "" <> x) $$ y)
 17. text "" <> ((text xs <> x) $$ y) = (text xs <> x) $$ y

== Functions ==
nesting :: Layout -> Int

== Laws ==
 18. nesting (text xs) = 0
 19. nesting (x $$ y) = nesting x
 20. nesting (x <> y) = nesting x
 21. nesting (nest x y) = x + nesting y
 22. nest (nesting x) (text "") <> x = x

