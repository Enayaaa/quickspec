Port all possible old QS examples to new QS
Switch from depth to size?!
For things like modifiers (sortedList etc.): if a type has no terms of depth 1 (only depth 2), terms of that type should have their depth reduced by 1. Brittle, though: what about variables?
Add definitions and missing terms warnings.
Add user-accessible term generator like in Erlang QS?
Add "ask why equation not printed."

Regexes: use Brzozowski derivatives to get a useful specification
Print out "i+j==j+i" instead of "j+i==i+j" by making disambiguate
alpha-convert everything.

Fix loss of completeness with depth optimisation when testing at depth
n splits two terms that were tested equal at depth n-1

Use definitions to mangle up the equation order. Namely, if you have
two definitions,
   negate x=0-x
   x-y=x+negate y,
then try alternately putting each definition first in the equation
order and see if either makes the defined symbol disappear in the
pruned equations, and which choice makes the set of pruned equations
smallest.

Reduce number of terms generated by bundling a term together with
things we know are equal to it---classify lists of terms instead of
terms. Maybe, instead of classifying terms, classify TestTrees, so we
can do the whole incremental thingy safely. Plus have some combinators
for constructing sets of terms incrementally.
